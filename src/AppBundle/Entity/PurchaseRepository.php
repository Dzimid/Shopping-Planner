<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * PurchaseRepository
 *
 * This class was generated by the PhpStorm "Php Annotations" Plugin. Add your own custom
 * repository methods below.
 */
class PurchaseRepository extends EntityRepository
{
    /**
     * @param Place $place
     *
     * @return Purchase[]|array
     */
    public function getAllPurchaseByPlace(Place $place)
    {
        $items = $place->getItems();
        $ids = array();

        /** @var Item $item */
        foreach ($items as $item) {
            $ids[] = $item->getId();
        }

        $purchase = $this->getEntityManager()
            ->getRepository(Purchase::class)
            ->findBy(array('item' => $ids));

        return array_reverse($purchase);
    }

    /**
     * @param Item  $item
     *
     * @param Place $place
     *
     * @return array
     */
    public function getLatestPurchase(Item $item, Place $place)
    {
        $date = array();

        /** @var User $user */
        foreach ($place->getUsers() as $user) {
            /** @var array $purchase */
            $purchase = $this->createQueryBuilder('p')
                ->where('p.item = :item')
                ->andWhere('p.user = :user')
                ->setParameters([
                    ':item' => $item,
                    ':user' => $user,
                ])
                ->orderBy('p.date', 'DESC')
                ->setMaxResults(1)
                ->getQuery()
                ->getResult();

            if (!empty($purchase)) {
                $date[$purchase[0]->getUser()->getId()] = $purchase[0]->getDate()->getTimestamp();
            } else {
                $date[$user->getId()] = 0;
            }
        }

        asort($date);
        return key($date);
    }
}
